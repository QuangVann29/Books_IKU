{"ast":null,"code":"import axios from \"axios\";\nimport { GET_BOOKS_ERROR, GET_BOOKS_LOADING, GET_BOOKS_SUCCESS, GET_BOOK_DETAILS_ERROR, GET_BOOK_DETAILS_LOADING, GET_BOOK_DETAILS_SUCCESS, GET_FILTER_BOOKS_ERROR, GET_FILTER_BOOKS_LOADING, GET_FILTER_BOOKS_SUCCESS, GET_SEARCH_BOOKS_ERROR, GET_SEARCH_BOOKS_LOADING, GET_SEARCH_BOOKS_SUCCESS } from \"./books.ActionType\";\nconst baseURL = \"\";\nexport const getBooks = () => async dispatch => {\n  dispatch({\n    type: GET_BOOKS_LOADING\n  });\n  try {\n    let res = await axios.get(`${baseURL}`);\n    let {\n      books\n    } = res.data;\n    dispatch({\n      type: GET_BOOKS_SUCCESS,\n      payload: books\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_BOOKS_ERROR\n    });\n  }\n};\nexport const getBookDetail = id => async dispatch => {\n  dispatch({\n    type: GET_BOOK_DETAILS_LOADING\n  });\n  try {\n    let res = await axios.get(`${baseURL}/${id}`);\n    const {\n      book\n    } = res.data;\n    dispatch({\n      type: GET_BOOK_DETAILS_SUCCESS,\n      payload: book\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_BOOK_DETAILS_ERROR\n    });\n  }\n};\nexport const getSearchBooks = query => async dispatch => {\n  dispatch({\n    type: GET_SEARCH_BOOKS_LOADING\n  });\n  try {\n    dispatch({\n      type: GET_SEARCH_BOOKS_SUCCESS,\n      payload: query\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_SEARCH_BOOKS_ERROR\n    });\n  }\n};\nexport const getBooksbyFilter = category => async dispatch => {\n  dispatch({\n    type: GET_FILTER_BOOKS_LOADING\n  });\n  try {\n    dispatch({\n      type: GET_FILTER_BOOKS_SUCCESS,\n      payload: category\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_FILTER_BOOKS_ERROR\n    });\n  }\n};","map":{"version":3,"names":["axios","GET_BOOKS_ERROR","GET_BOOKS_LOADING","GET_BOOKS_SUCCESS","GET_BOOK_DETAILS_ERROR","GET_BOOK_DETAILS_LOADING","GET_BOOK_DETAILS_SUCCESS","GET_FILTER_BOOKS_ERROR","GET_FILTER_BOOKS_LOADING","GET_FILTER_BOOKS_SUCCESS","GET_SEARCH_BOOKS_ERROR","GET_SEARCH_BOOKS_LOADING","GET_SEARCH_BOOKS_SUCCESS","baseURL","getBooks","dispatch","type","res","get","books","data","payload","error","getBookDetail","id","book","getSearchBooks","query","getBooksbyFilter","category"],"sources":["C:/Users/ngova/Downloads/Book_Store_App-master/Book_Store_App-master/frontend/src/Redux/Books/books.Action.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  GET_BOOKS_ERROR,\n  GET_BOOKS_LOADING,\n  GET_BOOKS_SUCCESS,\n  GET_BOOK_DETAILS_ERROR,\n  GET_BOOK_DETAILS_LOADING,\n  GET_BOOK_DETAILS_SUCCESS,\n  GET_FILTER_BOOKS_ERROR,\n  GET_FILTER_BOOKS_LOADING,\n  GET_FILTER_BOOKS_SUCCESS,\n  GET_SEARCH_BOOKS_ERROR,\n  GET_SEARCH_BOOKS_LOADING,\n  GET_SEARCH_BOOKS_SUCCESS,\n} from \"./books.ActionType\";\n\nconst baseURL = \"\";\n\nexport const getBooks = () => async (dispatch) => {\n  dispatch({ type: GET_BOOKS_LOADING });\n  try {\n    let res = await axios.get(`${baseURL}`);\n    let { books } = res.data;\n    dispatch({ type: GET_BOOKS_SUCCESS, payload: books });\n  } catch (error) {\n    dispatch({ type: GET_BOOKS_ERROR });\n  }\n};\n\nexport const getBookDetail = (id) => async (dispatch) => {\n  dispatch({ type: GET_BOOK_DETAILS_LOADING });\n  try {\n    let res = await axios.get(`${baseURL}/${id}`);\n    const { book } = res.data;\n    dispatch({ type: GET_BOOK_DETAILS_SUCCESS, payload: book });\n  } catch (error) {\n    dispatch({ type: GET_BOOK_DETAILS_ERROR });\n  }\n};\n\nexport const getSearchBooks = (query) => async (dispatch) => {\n  dispatch({ type: GET_SEARCH_BOOKS_LOADING });\n  try {\n    dispatch({ type: GET_SEARCH_BOOKS_SUCCESS, payload: query });\n  } catch (error) {\n    dispatch({ type: GET_SEARCH_BOOKS_ERROR });\n  }\n};\nexport const getBooksbyFilter = (category) => async (dispatch) => {\n  dispatch({ type: GET_FILTER_BOOKS_LOADING });\n  try {\n    dispatch({ type: GET_FILTER_BOOKS_SUCCESS, payload: category });\n  } catch (error) {\n    dispatch({ type: GET_FILTER_BOOKS_ERROR });\n  }\n};\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,eAAe,EACfC,iBAAiB,EACjBC,iBAAiB,EACjBC,sBAAsB,EACtBC,wBAAwB,EACxBC,wBAAwB,EACxBC,sBAAsB,EACtBC,wBAAwB,EACxBC,wBAAwB,EACxBC,sBAAsB,EACtBC,wBAAwB,EACxBC,wBAAwB,QACnB,oBAAoB;AAE3B,MAAMC,OAAO,GAAG,EAAE;AAElB,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAChDA,QAAQ,CAAC;IAAEC,IAAI,EAAEd;EAAkB,CAAC,CAAC;EACrC,IAAI;IACF,IAAIe,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAE,GAAEL,OAAQ,EAAC,CAAC;IACvC,IAAI;MAAEM;IAAM,CAAC,GAAGF,GAAG,CAACG,IAAI;IACxBL,QAAQ,CAAC;MAAEC,IAAI,EAAEb,iBAAiB;MAAEkB,OAAO,EAAEF;IAAM,CAAC,CAAC;EACvD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdP,QAAQ,CAAC;MAAEC,IAAI,EAAEf;IAAgB,CAAC,CAAC;EACrC;AACF,CAAC;AAED,OAAO,MAAMsB,aAAa,GAAIC,EAAE,IAAK,MAAOT,QAAQ,IAAK;EACvDA,QAAQ,CAAC;IAAEC,IAAI,EAAEX;EAAyB,CAAC,CAAC;EAC5C,IAAI;IACF,IAAIY,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAE,GAAEL,OAAQ,IAAGW,EAAG,EAAC,CAAC;IAC7C,MAAM;MAAEC;IAAK,CAAC,GAAGR,GAAG,CAACG,IAAI;IACzBL,QAAQ,CAAC;MAAEC,IAAI,EAAEV,wBAAwB;MAAEe,OAAO,EAAEI;IAAK,CAAC,CAAC;EAC7D,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdP,QAAQ,CAAC;MAAEC,IAAI,EAAEZ;IAAuB,CAAC,CAAC;EAC5C;AACF,CAAC;AAED,OAAO,MAAMsB,cAAc,GAAIC,KAAK,IAAK,MAAOZ,QAAQ,IAAK;EAC3DA,QAAQ,CAAC;IAAEC,IAAI,EAAEL;EAAyB,CAAC,CAAC;EAC5C,IAAI;IACFI,QAAQ,CAAC;MAAEC,IAAI,EAAEJ,wBAAwB;MAAES,OAAO,EAAEM;IAAM,CAAC,CAAC;EAC9D,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdP,QAAQ,CAAC;MAAEC,IAAI,EAAEN;IAAuB,CAAC,CAAC;EAC5C;AACF,CAAC;AACD,OAAO,MAAMkB,gBAAgB,GAAIC,QAAQ,IAAK,MAAOd,QAAQ,IAAK;EAChEA,QAAQ,CAAC;IAAEC,IAAI,EAAER;EAAyB,CAAC,CAAC;EAC5C,IAAI;IACFO,QAAQ,CAAC;MAAEC,IAAI,EAAEP,wBAAwB;MAAEY,OAAO,EAAEQ;IAAS,CAAC,CAAC;EACjE,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdP,QAAQ,CAAC;MAAEC,IAAI,EAAET;IAAuB,CAAC,CAAC;EAC5C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}