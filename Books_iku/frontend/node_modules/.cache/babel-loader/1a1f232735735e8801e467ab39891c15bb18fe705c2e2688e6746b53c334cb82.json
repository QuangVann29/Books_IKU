{"ast":null,"code":"import { GET_BOOKS_ERROR, GET_BOOKS_LOADING, GET_BOOKS_SUCCESS, GET_BOOK_DETAILS_ERROR, GET_BOOK_DETAILS_LOADING, GET_BOOK_DETAILS_SUCCESS, GET_FILTER_BOOKS_ERROR, GET_FILTER_BOOKS_LOADING, GET_FILTER_BOOKS_SUCCESS, GET_SEARCH_BOOKS_ERROR, GET_SEARCH_BOOKS_LOADING, GET_SEARCH_BOOKS_SUCCESS } from \"./books.ActionType\";\n\n// Note: Do not update/change the initial state\nconst productInitalState = {\n  loading: false,\n  error: false,\n  allBooks: [],\n  searchResult: [],\n  filterData: [],\n  singleBook: {}\n};\nexport const bookReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : productInitalState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case GET_BOOKS_LOADING:\n      {\n        return {\n          ...state,\n          loading: true,\n          error: false\n        };\n      }\n    case GET_BOOKS_ERROR:\n      {\n        return {\n          ...state,\n          loading: false,\n          error: true\n        };\n      }\n    case GET_BOOKS_SUCCESS:\n      {\n        return {\n          ...state,\n          loading: false,\n          allBooks: payload\n        };\n      }\n    case GET_SEARCH_BOOKS_LOADING:\n      {\n        return {\n          ...state,\n          loading: true\n        };\n      }\n    case GET_SEARCH_BOOKS_ERROR:\n      {\n        return {\n          ...state,\n          loading: false,\n          error: true\n        };\n      }\n    case GET_SEARCH_BOOKS_SUCCESS:\n      {\n        // Filter the allBooks array based on the search query\n        const searchResult = state.allBooks.filter(book => {\n          // Convert the book title, author, and description to lowercase for case-insensitive search\n          const lowercaseTitle = book.title.toLowerCase();\n          const lowercaseAuthor = book.author.toLowerCase();\n          const lowercaseDescription = book.description.toLowerCase();\n\n          // Check if any of the book properties match the query\n          return lowercaseTitle.includes(payload) || lowercaseAuthor.includes(payload) || lowercaseDescription.includes(payload);\n        });\n        return {\n          ...state,\n          loading: false,\n          searchResult: searchResult\n        };\n      }\n    case GET_BOOK_DETAILS_LOADING:\n      {\n        return {\n          ...state,\n          loading: true\n        };\n      }\n    case GET_BOOK_DETAILS_ERROR:\n      {\n        return {\n          ...state,\n          loading: false,\n          error: true\n        };\n      }\n    case GET_BOOK_DETAILS_SUCCESS:\n      {\n        return {\n          ...state,\n          loading: false,\n          singleBook: payload\n        };\n      }\n    case GET_FILTER_BOOKS_LOADING:\n      {\n        return {\n          ...state,\n          loading: true\n        };\n      }\n    case GET_FILTER_BOOKS_ERROR:\n      {\n        return {\n          ...state,\n          loading: true\n        };\n      }\n    case GET_FILTER_BOOKS_SUCCESS:\n      {\n        let filteredBooks = [];\n        if (payload !== \"\") {\n          filteredBooks = state.allBooks.filter(book => book.category === payload);\n        } else {\n          filteredBooks = [...state.allBooks];\n        }\n        return {\n          ...state,\n          loading: false,\n          filterData: filteredBooks\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"names":["GET_BOOKS_ERROR","GET_BOOKS_LOADING","GET_BOOKS_SUCCESS","GET_BOOK_DETAILS_ERROR","GET_BOOK_DETAILS_LOADING","GET_BOOK_DETAILS_SUCCESS","GET_FILTER_BOOKS_ERROR","GET_FILTER_BOOKS_LOADING","GET_FILTER_BOOKS_SUCCESS","GET_SEARCH_BOOKS_ERROR","GET_SEARCH_BOOKS_LOADING","GET_SEARCH_BOOKS_SUCCESS","productInitalState","loading","error","allBooks","searchResult","filterData","singleBook","bookReducer","state","arguments","length","undefined","type","payload","filter","book","lowercaseTitle","title","toLowerCase","lowercaseAuthor","author","lowercaseDescription","description","includes","filteredBooks","category"],"sources":["C:/Users/ngova/Downloads/Book_Store_App-master/Book_Store_App-master/frontend/src/Redux/Books/books.reducer.js"],"sourcesContent":["import {\n  GET_BOOKS_ERROR,\n  GET_BOOKS_LOADING,\n  GET_BOOKS_SUCCESS,\n  GET_BOOK_DETAILS_ERROR,\n  GET_BOOK_DETAILS_LOADING,\n  GET_BOOK_DETAILS_SUCCESS,\n  GET_FILTER_BOOKS_ERROR,\n  GET_FILTER_BOOKS_LOADING,\n  GET_FILTER_BOOKS_SUCCESS,\n  GET_SEARCH_BOOKS_ERROR,\n  GET_SEARCH_BOOKS_LOADING,\n  GET_SEARCH_BOOKS_SUCCESS,\n} from \"./books.ActionType\";\n\n// Note: Do not update/change the initial state\nconst productInitalState = {\n  loading: false,\n  error: false,\n  allBooks: [],\n  searchResult: [],\n  filterData: [],\n  singleBook: {},\n};\n\nexport const bookReducer = (state = productInitalState, { type, payload }) => {\n  switch (type) {\n    case GET_BOOKS_LOADING: {\n      return {\n        ...state,\n        loading: true,\n        error: false,\n      };\n    }\n    case GET_BOOKS_ERROR: {\n      return {\n        ...state,\n        loading: false,\n        error: true,\n      };\n    }\n    case GET_BOOKS_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        allBooks: payload,\n      };\n    }\n    case GET_SEARCH_BOOKS_LOADING: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case GET_SEARCH_BOOKS_ERROR: {\n      return {\n        ...state,\n        loading: false,\n        error: true,\n      };\n    }\n    case GET_SEARCH_BOOKS_SUCCESS: {\n      // Filter the allBooks array based on the search query\n      const searchResult = state.allBooks.filter((book) => {\n        // Convert the book title, author, and description to lowercase for case-insensitive search\n        const lowercaseTitle = book.title.toLowerCase();\n        const lowercaseAuthor = book.author.toLowerCase();\n        const lowercaseDescription = book.description.toLowerCase();\n\n        // Check if any of the book properties match the query\n        return (\n          lowercaseTitle.includes(payload) ||\n          lowercaseAuthor.includes(payload) ||\n          lowercaseDescription.includes(payload)\n        );\n      });\n      return {\n        ...state,\n        loading: false,\n        searchResult: searchResult,\n      };\n    }\n    case GET_BOOK_DETAILS_LOADING: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case GET_BOOK_DETAILS_ERROR: {\n      return {\n        ...state,\n        loading: false,\n        error: true,\n      };\n    }\n    case GET_BOOK_DETAILS_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        singleBook: payload,\n      };\n    }\n\n    case GET_FILTER_BOOKS_LOADING: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n\n    case GET_FILTER_BOOKS_ERROR: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case GET_FILTER_BOOKS_SUCCESS: {\n      let filteredBooks = [];\n      if (payload !== \"\") {\n        filteredBooks = state.allBooks.filter(\n          (book) => book.category === payload\n        );\n      } else {\n        filteredBooks = [...state.allBooks];\n      }\n      return {\n        ...state,\n        loading: false,\n        filterData: filteredBooks,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}